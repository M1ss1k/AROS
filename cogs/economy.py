import configparser
import discord
from discord.ext import commands
from discord import app_commands
#import psycopg2
import sqlite3
config = configparser.ConfigParser()
config.read('config.ini')
postgres = config["postgresql"]


governmentSalaries = {'–ü–æ–ª–∏—Ü–∏—è': 67000, '–§–°–°': 68000, '–¢–°–§': 78000, '–°–æ–ª–¥–∞—Ç': 87000, '–í–æ–¥–∏—Ç–µ–ª—å': 59000}
governmentSalariesId = {'–ü–æ–ª–∏—Ü–∏—è': 918543120298283060, '–§–°–°': 918543158307070042, '–¢–°–§': 1018470711850971176,
                        '–°–æ–ª–¥–∞—Ç': 918545314783309835, '–í–æ–¥–∏—Ç–µ–ª—å': 918543731634864208}

#conn = psycopg2.connect(host=postgres["host"], dbname=postgres["db"], user=postgres["user"], password=postgres["password"])
conn = sqlite3.connect('main.db')
curs = conn.cursor()

class Economics(commands.Cog):

    def __init__(self, bot):
        self.bot = bot

    # -- –ó–ê–†–ü–õ–ê–¢–ê –ì–û–°_–í–ê --
    @commands.command(pass_context=True)
    @commands.has_role('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ–Ω—å–≥–∞–º–∏')
    async def salary_gov(self, ctx, role_name: str):
        # guild = 917341944424841236
        emb = discord.Embed(title=f'–í—ã–¥–∞—á–∞ –∑–∞—Ä–ø–ª–∞—Ç—ã —Å —Ä–æ–ª—å—é {role_name}', colour=discord.Color.blue())
        try:
            role = discord.utils.get(ctx.guild.roles, id=governmentSalariesId[role_name])
        except:
            emb_Er = discord.Embed(title=f'–û—à–∏–±–∫–∞ ‚ùå', colour=discord.Color.red())
            emb_Er.add_field(name=f'–î–æ–ø—É—â–µ–Ω–∞ –æ—à–∏–±–∫–∞ –≤ —Ä–æ–ª–∏', value=f'–¢–∞–∫–æ–π —Ä–æ–ª–∏ –≤ —Å–ø–∏—Å–∫–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
            return await ctx.send(embed=emb_Er)
        count = 0
        for member in ctx.guild.members:
            if role in member.roles:
                curs.execute(f'SELECT bank FROM money WHERE user_id = {member.id}')
                sal = curs.fetchone()
                try:
                    bank_sal = sal[0]
                except:
                    bank_sal = 0
                curs.execute(
                    f'UPDATE money SET bank = {bank_sal + governmentSalaries[role_name]} WHERE user_id = {member.id}')
                conn.commit()
                count += 1
        emb.add_field(name=f'–í—ã–¥–∞–Ω–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞ —Å —Ä–æ–ª—å—é {role_name}', value=f'–°—É–º–º–∞: {governmentSalaries[role_name]}F')
        curs.execute(f"SELECT bank FROM money WHERE user_id = {1078269797223112774} ")
        bot_sal = curs.fetchone()
        try:
            botbank = bot_sal[0]
        except:
            botbank = 0
        curs.execute(
            f'UPDATE money SET bank = {botbank - (count * governmentSalaries[role_name])} WHERE user_id = {1078269797223112774}')
        conn.commit()
        await ctx.send(embed=emb)
        return

    @app_commands.command(name='salary', description='–í—ã–¥–∞—Ç—å –∑–∞—Ä–ø–ª–∞—Ç—É ( —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—ã –∫–æ–º–ø–∞–Ω–∏–π )')
    @app_commands.checks.has_role("–≤–ª–∞–¥–µ–ª–µ—Ü –∫–æ–º–ø–∞–Ω–∏–∏")
    async def salary_company(self, interaction: discord.Interaction , role_name : str, amount : int):
        emb = discord.Embed(title=f'–í—ã–¥–∞—á–∞ –∑/–ø —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º —Å —Ä–æ–ª—å—é {role_name}', colour=discord.Color.blue())
        emb.add_field(name=f'–í—ã–¥–∞–Ω–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞ —Å —Ä–æ–ª—å—é {role_name}', value=f'–°—É–º–º–∞: {amount}F')
        roles = await interaction.guild.fetch_roles()
        for r in roles:
            if r.name.split() == role_name.split():
                roleid = r.id

        try:
            checked_role = discord.utils.get(interaction.guild.roles, id=roleid)
        except:
            emb_Er = discord.Embed(title=f'–û—à–∏–±–∫–∞ ‚ùå', colour=discord.Color.red())
            emb_Er.add_field(name=f'–î–æ–ø—É—â–µ–Ω–∞ –æ—à–∏–±–∫–∞ –≤ —Ä–æ–ª–∏', value=f'–¢–∞–∫–æ–π —Ä–æ–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
            return await interaction.response.send_message(embed=emb_Er)
        count = 0
        curs.execute(f"SELECT bank FROM money WHERE user_id = {interaction.user.id}")
        check_bal = curs.fetchone()

        try:
            bank = check_bal[0]
        except:
            bank = 0

        for member in interaction.guild.members:
            if checked_role in member.roles:
                count += 1

        if bank < count * int(amount):
            emb_Er = discord.Embed(title=f'–û—à–∏–±–∫–∞ ‚ùå', colour=discord.Color.red())
            emb_Er.add_field(name=f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤',
                             value=f'–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å –∑–∞—Ä–ø–ª–∞—Ç—É –≤—Å–µ–º –ª—é–¥—è–º —Å —ç—Ç–æ–π —Ä–æ–ª—å—é.')
            return await interaction.response.send_message(embed=emb_Er)
        else:
            for member in interaction.guild.members:
                if checked_role in member.roles:
                    curs.execute(f"SELECT bank FROM money WHERE user_id = {member.id}")
                    sal = curs.fetchone()
                    try:
                        bank_sal = sal[0]
                    except:
                        bank_sal = 0
                    curs.execute(f"UPDATE money SET bank = {bank_sal + int(amount)} WHERE user_id = {member.id}")
                    conn.commit()

            curs.execute(f"UPDATE money SET bank = {bank - (count * int(amount))} WHERE user_id = {interaction.user.id}")
            conn.commit()
            return await interaction.response.send_message(embed=emb)

    # -- –°–î–ï–õ–ê–¢–¨ –ü–ï–†–ï–í–û–î --
    @app_commands.command(name='pay', description='–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏.')
    @app_commands.choices(wallet_or_bank=[
        app_commands.Choice(name="–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ –±–∞–Ω–∫", value="bank"),
        app_commands.Choice(name="–ü–µ—Ä–µ–¥–∞—Ç—å –Ω–∞–ª–∏—á–Ω—ã–º–∏", value="wallet")])
    async def pay(self, interaction : discord.Interaction, wallet_or_bank: app_commands.Choice[str], member: discord.Member, amount: int):
        emb_succes = discord.Embed(title=f'–ü–µ—Ä–µ–≤–æ–¥ –∫–ª–∏–µ–Ω—Ç—É –§–µ—Å–æ–ë–∞–Ω–∫–∞ {member}', colour=0x00ffc8)
        curs.execute(f"SELECT wallet, bank FROM money WHERE user_id = {interaction.user.id}")
        bal_sender = curs.fetchone()
        curs.execute(f"SELECT wallet, bank FROM money WHERE user_id = {member.id}")
        bal_getter = curs.fetchone()
        try:
            wallet_sender = bal_sender[0]
            bank_sender = bal_sender[1]
            wallet_getter = bal_getter[0]
            bank_getter = bal_getter[1]
        except:
            wallet_sender = 0
            bank_sender = 0
            wallet_getter = 0
            bank_getter = 0
        if amount > bank_sender or amount > wallet_sender or amount < 0:
            emb = discord.Embed(title=f'–û—à–∏–±–∫–∞ {interaction.user}', colour=discord.Color.red())
            emb.add_field(name='–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå',
                          value=f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥, —Ç–∞–∫ –∫–∞–∫ —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.')
            return await interaction.response.send_message(embed=emb, ephemeral=True)
        elif wallet_or_bank.value == 'bank':
            emb_succes.add_field(name='–ü–µ—Ä–µ–≤–æ–¥ –ø–æ —Å—á–µ—Ç—É üè¶', value=f'–°—É–º–º–∞: {amount}F')
            curs.execute(f"UPDATE money SET bank = {bank_sender - amount} WHERE user_id = {interaction.user.id}")
            curs.execute(f"UPDATE money SET bank = {bank_getter + amount} WHERE user_id = {member.id}")
            conn.commit()

        elif wallet_or_bank.value  == "wallet":
            emb_succes.add_field(name='–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞–ª–∏—á–Ω—ã–º–∏ üí∂', value=f'–°—É–º–º–∞: {amount}F')
            curs.execute(f"UPDATE money SET wallet = {wallet_sender - amount} WHERE user_id = {interaction.user.id}")
            curs.execute(f"UPDATE money SET wallet = {wallet_getter + amount} WHERE user_id = {member.id}")
            conn.commit()

        return await interaction.response.send_message(embed=emb_succes, ephemeral=True)

    # -- –ü–†–û–í–ï–†–ò–¢–¨ –ë–ê–õ–ê–ù–° -

    @app_commands.command(name="balance", description="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å")
    async def balance(self, interaction: discord.Interaction, member : discord.Member):

        emb = discord.Embed(title=f'–ë–∞–ª–∞–Ω—Å {member}', colour=discord.Color.green())
        curs.execute(f"SELECT wallet, bank FROM money WHERE user_id = {member.id}")
        bal = curs.fetchone()
        try:
            wallet = bal[0]
            bank = bal[1]
        except:
            wallet = 0
            bank = 0

        emb.add_field(name='–ù–∞–ª–∏—á–Ω—ã–º–∏ üí∂', value=f'–ù–∞–ª–∏—á–Ω—ã–º–∏: {wallet}F')
        emb.add_field(name='–ë–∞–Ω–∫ üè¶', value=f'–í –±–∞–Ω–∫–µ: {bank}F')
        await interaction.response.send_message(embed=emb, ephemeral=True)

    # -- –°–ù–Ø–¢–¨ –î–ï–ù–¨–ì–ò –° –°–ß–ï–¢–ê --
    @app_commands.command(name='withdraw', description='–°–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å –±–∞–Ω–∫–∞')
    async def withdraw(self, interaction: discord.Interaction, amount: int):
        curs.execute(f'SELECT * FROM money WHERE user_id = {interaction.user.id}')

        data = curs.fetchone()

        wallet = data[1]
        bank = data[2]


        if bank < amount:
            emb = discord.Embed(title=f'–û—à–∏–±–∫–∞ {interaction.user}', colour=discord.Color.red())
            emb.add_field(name='–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå', value=f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –±–æ–ª—å—à–µ, —á–µ–º —É –≤–∞—Å –µ—Å—Ç—å –Ω–∞ —Å—á–µ—Ç—É.')
            print(type(bank), type(amount), bank, amount)

        else:
            emb = discord.Embed(title=f'–°–Ω—è—Ç–∏–µ –¥–µ–Ω–µ–≥ —Å —Å—á–µ—Ç–∞ {interaction.user.id}', colour=discord.Color.purple())
            curs.execute(f"UPDATE money SET wallet = {wallet + amount} WHERE user_id = {interaction.user.id}")
            curs.execute(f'UPDATE money SET bank = {bank - amount} WHERE user_id = {interaction.user.id}')
            conn.commit()
            emb.add_field(name='–í–Ω—É—Ç—Ä–µ—Å—á–µ—Ç–æ–≤–æ–π –ø–µ—Ä–µ–≤–æ–¥ ‚úÖ', value=f'–í—ã —Å–Ω—è–ª–∏ {amount}F —Å–æ —Å—á–µ—Ç–∞ üí∂.')

            conn.commit()

        return await interaction.response.send_message(embed=emb, ephemeral=True)

    @app_commands.command(name='deposit', description='–í–Ω–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å—á–µ—Ç')
    async def deposit(self, interaction: discord.Interaction, amount: int):
        curs.execute(f'SELECT * FROM money WHERE user_id = {interaction.user.id}')

        data = curs.fetchone()

        wallet = data[1]
        bank = data[2]

        if bank < amount:
            emb = discord.Embed(title=f'–û—à–∏–±–∫–∞ {interaction.user}', colour=discord.Color.red())
            emb.add_field(name='–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå', value=f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –±–æ–ª—å—à–µ, —á–µ–º —É –≤–∞—Å –µ—Å—Ç—å –Ω–∞ —Å—á–µ—Ç—É.')
            print(type(bank), type(amount), bank, amount)

        else:
            emb = discord.Embed(title=f'–°–Ω—è—Ç–∏–µ –¥–µ–Ω–µ–≥ —Å —Å—á–µ—Ç–∞ {interaction.user.id}', colour=discord.Color.purple())
            curs.execute(f"UPDATE money SET wallet = {wallet - amount} WHERE user_id = {interaction.user.id}")
            curs.execute(f'UPDATE money SET bank = {bank + amount} WHERE user_id = {interaction.user.id}')
            conn.commit()
            emb.add_field(name='–í–Ω—É—Ç—Ä–µ—Å—á–µ—Ç–æ–≤–æ–π –ø–µ—Ä–µ–≤–æ–¥ ‚úÖ', value=f'–í—ã –≤–Ω–µ—Å–ª–∏ {amount}F –Ω–∞ —Å—á–µ—Ç üí∂.')

            conn.commit()

        return await interaction.response.send_message(embed=emb, ephemeral=True)

    # -- –î–û–ë–ê–í–ò–¢–¨ –î–ï–ù–¨–ì–ò –ù–ê –°–ß–ï–¢ ( –ê–î–ú–ò–ù –û–ù–õ–ò ) --

    @app_commands.command(name='add-money', description='–î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–º–∏ –∫–æ–º—É-–ª–∏–±–æ. (admin-only)')
    @app_commands.checks.has_role("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ–Ω—å–≥–∞–º–∏")
    @app_commands.choices(wallet_or_bank=[
        app_commands.Choice(name="–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ –±–∞–Ω–∫", value="bank"),
        app_commands.Choice(name="–ü–µ—Ä–µ–¥–∞—Ç—å –Ω–∞–ª–∏—á–Ω—ã–º–∏", value="wallet")])
    async def add_money(self, interaction: discord.Interaction, wallet_or_bank: app_commands.Choice[str], member: discord.Member, money_count : int):

        emb = discord.Embed(title=f'–ü–µ—Ä–µ–≤–æ–¥ –¥–µ–Ω–µ–≥ {member}.', colour=discord.Color.dark_blue())
        curs.execute(f"SELECT wallet, bank FROM money WHERE user_id = {member.id}")
        bal = curs.fetchone()
        try:
            wallet = bal[0]
            bank = bal[1]

        except:
            wallet = 0
            bank = 0
        if wallet_or_bank.value == 'bank':
            emb.add_field(name=f'–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –±–∞–Ω–∫', value=money_count)
            curs.execute(f"UPDATE money SET bank = {bank + int(money_count)} WHERE user_id = {member.id}")
            conn.commit()


        elif wallet_or_bank.value == 'wallet':

            emb.add_field(name=f'–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—à–µ–ª–µ–∫', value=money_count)
            curs.execute(f"UPDATE money SET wallet = {wallet + int(money_count)} WHERE user_id = {member.id}")
            conn.commit()

        return await interaction.response.send_message(embed = emb, ephemeral=True)

    @app_commands.command(name='remove-money', description='–£–¥–∞–ª–∏—Ç—å –¥–µ–Ω—å–≥–º–∏ –∫–æ–º—É-–ª–∏–±–æ. (admin-only)')
    @app_commands.checks.has_role("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ–Ω—å–≥–∞–º–∏")
    @app_commands.choices(wallet_or_bank=[
        app_commands.Choice(name="–£–¥–∞–ª–∏—Ç—å –∏–∑ –±–∞–Ω–∫–∞", value="bank"),
        app_commands.Choice(name="–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—à–µ–ª—å–∫–∞", value="wallet")])
    async def add_money(self, interaction: discord.Interaction, wallet_or_bank: app_commands.Choice[str],
                        member: discord.Member, money_count: int):

        emb = discord.Embed(title=f'–£–¥–∞–ª–µ–Ω–∏–µ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ {member}.', colour=discord.Color.dark_red())
        curs.execute(f"SELECT wallet, bank FROM money WHERE user_id = {member.id}")
        bal = curs.fetchone()
        try:
            wallet = bal[0]
            bank = bal[1]

        except:
            wallet = 0
            bank = 0
        if wallet_or_bank.value == 'bank':
            emb.add_field(name=f'–£–¥–∞–ª–µ–Ω–æ –∏–∑ –±–∞–Ω–∫–∞', value=money_count)
            curs.execute(f"UPDATE money SET bank = {bank - int(money_count)} WHERE user_id = {member.id}")
            conn.commit()


        elif wallet_or_bank.value == 'wallet':

            emb.add_field(name=f'–£–¥–∞–ª–µ–Ω–æ –∏–∑ –∫–æ—à–µ–ª—å–∫–∞', value=money_count)
            curs.execute(f"UPDATE money SET wallet = {wallet - int(money_count)} WHERE user_id = {member.id}")
            conn.commit()

        return await interaction.response.send_message(embed=emb, ephemeral=True)

async def setup(client):
    await client.add_cog(Economics(client))